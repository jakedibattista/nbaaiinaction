---
description: 
globs: 
alwaysApply: true
---
You are an expert AI programming assistant specializing in NBA analytics and simulation applications.

You always use the latest stable versions of TypeScript, JavaScript, React, Node.js, Express.js, MongoDB, and are familiar with sports data analysis best practices.

PROJECT OVERVIEW:
NBA Trade Consigliere - A webapp that allows users to create fake NBA trades and simulate how they would have impacted the 2025 NBA playoffs. Users can explore "what if" scenarios through natural language queries powered by Google Gemini AI.

HACKATHON CONTEXT:
- Submitted to: https://ai-in-action.devpost.com/
- Current Status: Building MVP with React frontend + Express backend + MongoDB
- Timeline: Limited hackathon timeframe, focus on core functionality first

Tech Stack:
- Backend: Node.js with Express.js
- Database: MongoDB with Mongoose ODM (schema based on thecodebarbarian.com NBA data patterns)
- Frontend: React.js with TypeScript  
- AI Integration: Google Gemini API for natural language trade analysis
- External API: rest.nbaapi.com for 2024-2025 NBA statistics
- UI: Custom CSS (NBA-themed styling already implemented)
- Deployment: Google Cloud Platform

MONGODB SCHEMA DESIGN:
Based on proven NBA data patterns from thecodebarbarian.com blog post, adapted for 2025 trade simulation:

Core Collections:
1. **players** - 2024-2025 NBA player data from rest.nbaapi.com
   ```javascript
   {
     _id: ObjectId,
     name: "Player Name",
     team: "TEAM_ABBREV", 
     position: "PG|SG|SF|PF|C",
     player_id: "NBA_API_ID",
     stats_2025: {
       regular_season: { 
         games: Number,
         games_started: Number,
         minutes: Number,
         pts: Number,
         reb: Number,
         ast: Number,
         stl: Number,
         blk: Number,
         fg_pct: Number,
         fg3_pct: Number,
         ft_pct: Number,
         tov: Number,
         pf: Number,
         plus_minus: Number,
         total_points: Number,
         total_rebounds: Number,
         total_assists: Number
       }
     },
     salary: Number,
     contract_years: Number,
     active: true
   }
   ```

2. **teams** - 2024-2025 NBA team data derived from player statistics
   ```javascript
   {
     _id: ObjectId,
     name: "Team Name",
     abbreviation: "TEAM_ABBREV",
     conference: "Eastern|Western",
     division: String,
     roster: [player_ids],
     stats_2025: {
       regular_season: {
         wins: Number,
         losses: Number,
         offensive_rating: Number,
         defensive_rating: Number,
         net_rating: Number,
         pace: Number
       }
     }
   }
   ```

3. **user_queries** - Store user trade simulation queries
   ```javascript
   {
     _id: ObjectId,
     query: String,
     trade_type: "player|draft_pick|combination",
     teams: [team_ids],
     players_out: [player_ids],
     players_in: [player_ids],
     result: {
       impact_score: Number,
       analysis: String,
       created_at: Date
     }
   }
   ```

DATA SOURCES:
- Player Statistics: rest.nbaapi.com (2024-2025 season)
- Team Statistics: Derived from player data and aggregated team performance
- Salary Data: Estimated based on player performance and current NBA salary patterns
- Contract Information: Generated based on player age and performance metrics

DATA IMPORT STRATEGY:
1. **Priority 1**: 2025 playoff team rosters and key stats from balldontlie.io
2. **Priority 2**: 2025 playoff series data and results  
3. **Priority 3**: Historical betting odds for playoff series (manual entry for MVP)
4. **Focus**: Only teams that made 2025 playoffs initially, expand later

CORE FEATURES (MVP):
1. **Natural Language Trade Analysis** (HIGHEST PRIORITY)
   - Chat interface: "What if the Lakers had traded for Damian Lillard?"
   - Gemini AI parses query → database lookup → impact calculation → response
   
2. **Basic Trade Impact Calculator**
   - Simple stat comparison (Player A vs Player B) 
   - Win probability adjustments based on key metrics
   - Focus on playoff series that actually happened in 2025

3. **Playoff Series Explorer**
   - Browse 2025 playoff matchups
   - View original betting odds and actual results
   - Simulate alternative outcomes with different rosters

API ENDPOINTS TO BUILD:
- POST /api/query - Gemini-powered natural language analysis
- GET /api/players - 2025 NBA player data with playoff stats
- GET /api/teams/:id - Team roster and playoff performance  
- GET /api/playoff-series - 2025 playoff matchups and results
- POST /api/simulate-trade - Calculate trade impact on playoff outcomes
- GET /api/trade-scenarios - Browse saved trade simulations

GEMINI AI INTEGRATION:
- Parse natural language trade questions
- Query MongoDB for relevant player/team/series data
- Calculate statistical impact of proposed trades
- Generate fan-friendly explanations of trade implications
- Reference actual 2025 playoff results for context

DEVELOPMENT PRIORITIES:
1. Set up MongoDB with initial schema and sample data
2. Integrate balldontlie.io API for 2025 player/team data
3. Implement basic Gemini AI natural language processing
4. Build trade simulation logic (start simple: stat swapping)
5. Add playoff series data with betting odds
6. Polish UI and deploy MVP

KEY CONSTRAINTS:
- Hackathon timeline: Focus on MVP functionality
- MongoDB expertise: Provide extensive guidance on queries and aggregation
- Data availability: Work with what's accessible from balldontlie.io
- Scope creep: Resist advanced features until core works perfectly

TECHNICAL NOTES:
- Use proven MongoDB aggregation patterns from thecodebarbarian.com examples
- Implement proper error handling for API failures and missing data
- Cache frequent queries for performance
- Design schema for easy expansion beyond 2025 season

- Follow NBA API rate limits and terms of service